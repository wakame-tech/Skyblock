import org.ajoberstar.grgit.Grgit
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // versioning
        classpath 'org.ajoberstar:grgit:1.7.2'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
}

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://maven.sk89q.com/repo/'
    }
}

ext {
    git = Grgit.open(file('..'))
    desc = git.describe().toString().trim()
    hash = desc.matches(".*-[0-9]+-g[0-9a-f]{7}") ? "-SNAPSHOT" : ""
    dirty = git.status().isClean() ? "" : "+dirty"
    // build_version = desc + hash + dirty
    build_version = version // desc
}

group = pluginGroup
version = ext.build_version

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed files('libs/EffectLib-6.2.jar')
    embed files('libs/fastparticles-1.2.3.jar')
    compile 'fr.minuskube:netherboard-bukkit:1.1.3'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation 'com.google.code.gson:gson:2.8.6'
    compile 'org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT'
    compile 'com.sk89q.worldedit:worldedit-bukkit:7.1.0'
    embed "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'tech.wakame.skyblock.SkyBlock'
    }

    from configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
         filter ReplaceTokens, tokens: [version: build_version]
    }
}

build {
//    doFirst {
//        ant.propertyfile(file: 'gradle.properties') {
//            entry key: 'version', value: build_version
//        }
//    }

    doLast {
        println "SkyBlock $build_version build complete"

        exec {
            // copy plugin jar
            commandLine 'cp', "build/libs/SkyBlock-${build_version}.jar", "$serverPath/data/plugins"
        }

        exec {
            // minecraft server reload in container
            commandLine 'cd', serverPath
            commandLine 'docker-compose', 'exec', '-d', 'spigot-server', 'mc_send', '"plugman reload Skyblock"'
        }
    }
}
